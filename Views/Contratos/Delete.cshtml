@model InmobiliariaLopez.Models.Contrato

@{
  ViewData["Title"] = "Eliminar Contrato";
}

<!-- Título -->
<h1 class="mb-4 text-center" style="font-family: 'Roboto', sans-serif; font-size: 2rem; color: #343a40;">Eliminar
  Contrato</h1>

<!-- Card para envolver el contenido -->
<div class="card shadow-lg border-0 rounded-4">
  <div class="card-header bg-gradient text-dark border-0 rounded-4">
    <h5 class="mb-0" style="font-family: 'Roboto', sans-serif; font-size: 1.25rem;">Confirmación de eliminación</h5>
  </div>
  <div class="card-body" style="padding: 1.5rem;">
    <h4>Detalles del Contrato</h4>
    <hr />
    <dl class="row">
      <dt class="col-sm-2">ID</dt>
      <dd class="col-sm-10">@Model.IdContrato</dd>

      <dt class="col-sm-2">Inmueble</dt>
      <dd class="col-sm-10">@Model.DireccionInmueble</dd>

      <dt class="col-sm-2">Inquilino</dt>
      <dd class="col-sm-10">@Model.NombreInquilino</dd>

      <dt class="col-sm-2">Fecha Inicio</dt>
      <dd class="col-sm-10">@Model.FechaInicio.ToShortDateString()</dd>

      <dt class="col-sm-2">Fecha Fin</dt>
      <dd class="col-sm-10">@Model.FechaFin.ToShortDateString()</dd>

      <dt class="col-sm-2">Monto Mensual</dt>
      <dd class="col-sm-10">$@Model.MontoMensual.ToString("F2")</dd>

      <dt class="col-sm-2">Estado Contrato</dt>
      <dd class="col-sm-10">@Model.EstadoContrato</dd>
    </dl>
    <h3 class="text-danger mt-4">¿Estás seguro de que querés eliminar este contrato?</h3>
  </div>

  <!-- Botones -->
  <div class="card-footer d-flex justify-content-end">
    <form id="deleteForm" asp-action="DeleteConfirmed" method="post">
      @Html.AntiForgeryToken()
      <input type="hidden" name="id" value="@Model.IdContrato" />
      <button type="submit" class="btn btn-danger btn-sm me-2">Eliminar</button>
    </form>
    <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">Volver al listado</a>
  </div>
</div>

@section Scripts {
  @await Html.PartialAsync("_ValidationScriptsPartial")
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const form = document.getElementById("deleteForm");

      form.addEventListener("submit", async function (event) {
        event.preventDefault(); // Evita el submit por defecto

        const confirmacion = await Swal.fire({
          title: "¿Eliminar Contrato?",
          text: "Esta acción no se puede deshacer.",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#dc3545",
          cancelButtonColor: "#6c757d",
          confirmButtonText: "Sí, eliminar",
          cancelButtonText: "Cancelar"
        });

        if (confirmacion.isConfirmed) {
          Swal.fire({
            title: "Eliminando...",
            text: "Por favor esperá...",
            icon: "info",
            allowOutsideClick: false,
            didOpen: () => Swal.showLoading()
          });

          const formData = new FormData(form);
          const response = await fetch(form.action, {
            method: "POST",
            body: formData,
            headers: {
              "X-Requested-With": "XMLHttpRequest"
            }
          });

          if (response.ok) {
            Swal.fire({
              title: "¡Éxito!",
              text: "El contrato fue eliminado correctamente.",
              icon: "success",
              confirmButtonText: "Volver al listado"
            }).then(() => {
              window.location.href = "@Url.Action("Index")";
            });
          } else {
            Swal.fire({
              title: "Error",
              text: "No se pudo eliminar el contrato. Intentá nuevamente.",
              icon: "error",
              confirmButtonText: "Ok"
            });
          }
        }
      });
    });
  </script>
}
