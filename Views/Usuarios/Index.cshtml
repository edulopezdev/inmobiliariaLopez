@model IEnumerable<InmobiliariaLopez.Models.Usuario>

@{
  ViewData["Title"] = "Lista de Usuarios";

  // Aquí obtenemos el Id del usuario logueado como un string
  var loggedInUserId = User.FindFirst("IdUsuario")?.Value;

  // Convertimos el IdUsuario logueado a int para poder compararlo con el usuario.IdUsuario
  int loggedInUserIdInt = 0;
  if (int.TryParse(loggedInUserId, out loggedInUserIdInt))
  {
    // Si la conversión es exitosa, podemos utilizar loggedInUserIdInt
  }
  else
  {
    // Si la conversión falla, loggedInUserIdInt permanecerá en 0
    // Aquí podrías manejar el caso si el valor no es válido.
  }
}

<!-- Título -->
<h1 class="mb-4 text-center" style="font-family: 'Roboto', sans-serif; font-size: 2rem; color: #343a40;">Lista de
  Usuarios</h1>

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger">
    @TempData["ErrorMessage"]
  </div>
}

<!-- Card para envolver la tabla -->
<div class="card shadow-lg border-0 rounded-4">
  <div class="card-header bg-gradient text-dark border-0">
    <h5 class="mb-0">Usuarios</h5>
  </div>
  <div class="card-body">
    <!-- Botón "Agregar Usuario" en la parte superior derecha -->
    <div class="d-flex justify-content-end mb-3">
      <a asp-action="Create" class="btn btn-primary btn-sm">
        <i class="fas fa-plus-circle me-2"></i> Nuevo Usuario
      </a>
    </div>

    <div class="table-responsive">
      <table class="table table-bordered table-hover">
        <thead>
          <tr>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">ID
            </th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              Email</th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              Rol</th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              Fecha Creación</th>
            <th class="text-center"
              style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              Acciones
            </th>
          </tr>
        </thead>
        <tbody>
          @foreach (var usuario in Model)
          {
            <tr>
              <td>@usuario.IdUsuario</td>
              <td>@usuario.Email</td>
              <td>@usuario.Rol</td>
              <td>@usuario.FechaCreacion.ToString("dd/MM/yyyy")</td>
              <td class="text-center">
                <!-- Ver detalles -->
                <a asp-action="Details" asp-route-id="@usuario.IdUsuario" class="btn-link" data-bs-toggle="tooltip"
                  data-bs-placement="top" title="Ver detalles del usuario">
                  <i class="fas fa-eye"></i>
                </a>
                <!-- Editar -->
                <a asp-action="Edit" asp-route-id="@usuario.IdUsuario" class="btn-link" data-bs-toggle="tooltip"
                  data-bs-placement="top" title="Editar usuario">
                  <i class="fas fa-edit"></i>
                </a>
                <!-- Eliminar, pero no para el usuario logueado -->
                @if (usuario.IdUsuario != loggedInUserIdInt)
                {
                  <a asp-action="Delete" asp-route-id="@usuario.IdUsuario" class="btn-link" data-bs-toggle="tooltip"
                    data-bs-placement="top" title="Eliminar usuario">
                    <i class="fas fa-trash-alt"></i>
                  </a>
                }
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    // Activar tooltips de Bootstrap
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.forEach(function (tooltipTriggerEl) {
      new bootstrap.Tooltip(tooltipTriggerEl);
    });
  </script>
}
