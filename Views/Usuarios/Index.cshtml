@model IEnumerable<InmobiliariaLopez.Models.Usuario>

@{
  // Aquí obtenemos el Id del usuario logueado como un string
  var loggedInUserId = User.FindFirst("IdUsuario")?.Value;

  // Convertimos el IdUsuario logueado a int para poder compararlo con el usuario.IdUsuario
  int loggedInUserIdInt = 0;
  if (int.TryParse(loggedInUserId, out loggedInUserIdInt))
  {
    // Si la conversión es exitosa, podemos utilizar loggedInUserIdInt
  }
  else
  {
    // Si la conversión falla, loggedInUserIdInt permanecerá en 0
  }

  // Establecer el título de la página dependiendo del rol
  ViewData["Title"] = User.IsInRole("Administrador") ? "Lista de Usuarios" : "Mi Perfil";
}

<h1 class="mb-4 text-center" style="font-family: 'Roboto', sans-serif; font-size: 2rem; color: #343a40;">
  @ViewData["Title"]
</h1>

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger">
    @TempData["ErrorMessage"]
  </div>
}

<div class="card shadow-lg border-0 rounded-4">
  <div class="card-header bg-gradient text-dark border-0">
    <h5 class="mb-0">@ViewData["Title"]</h5>
  </div>
  <div class="card-body">
    @if (User.IsInRole("Administrador"))
    {
      <div class="d-flex justify-content-end mb-3">
        <a asp-action="Create" class="btn btn-primary btn-sm">
          <i class="fas fa-plus-circle me-2"></i> Nuevo Usuario
        </a>
      </div>
    }

    <div class="table-responsive">
      <table class="table table-bordered table-hover">
        <thead>
          <tr>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">LEGAJO
            </th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              EMAIL</th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              ROL</th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">
              FECHA CREACIÓN</th>
            <th style="font-family: 'Poppins', sans-serif; font-size: 1rem; font-weight: 600; letter-spacing: 0.5px;">ACCIONES
            </th>
          </tr>
        </thead>
        <tbody>
          @{
            var esAdmin = User.IsInRole("Administrador");
            var usuariosAMostrar = esAdmin
            ? Model // Si es Admin, muestra todos los usuarios
            : Model.Where(u => u.IdUsuario == loggedInUserIdInt); // Si no es admin, muestra solo su propio usuario
          }

          @foreach (var usuario in usuariosAMostrar)
          {
            <tr>
              <td>@usuario.IdUsuario</td>
              <td>@usuario.Email</td>
              <td>@usuario.Rol</td>
              <td>@usuario.FechaCreacion.ToString("dd/MM/yyyy")</td>
              <td class="text-center">
                <!-- Mostrar acciones solo para el usuario logueado o admins -->
                <a asp-action="Details" asp-route-id="@usuario.IdUsuario" class="btn-link" data-bs-toggle="tooltip"
                  data-bs-placement="top" title="Ver detalles del usuario">
                  <i class="fas fa-eye"></i>
                </a>
                @if (usuario.IdUsuario == loggedInUserIdInt || esAdmin)
                {
                  <a asp-action="Edit" asp-route-id="@usuario.IdUsuario" class="btn-link" data-bs-toggle="tooltip"
                    data-bs-placement="top" title="Editar usuario">
                    <i class="fas fa-edit"></i>
                  </a>
                }
                @if (esAdmin && usuario.IdUsuario != loggedInUserIdInt)
                {
                  <a asp-action="Delete" asp-route-id="@usuario.IdUsuario" class="btn-link" data-bs-toggle="tooltip"
                    data-bs-placement="top" title="Eliminar usuario">
                    <i class="fas fa-trash-alt"></i>
                  </a>
                }
              </td>
            </tr>
          }

        </tbody>
      </table>
    </div>

    @if (ViewBag.TotalPaginas > 1 && esAdmin)
      {
      <div class="mt-3">
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center">
            @if (ViewBag.PaginaActual > 1)
            {
              <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pagina="@(ViewBag.PaginaActual - 1)">Anterior</a>
              </li>
            }
            else
            {
              <li class="page-item disabled">
                <span class="page-link">Anterior</span>
              </li>
            }

          @for (int i = 1; i <= ViewBag.TotalPaginas; i++)
          {
            <li class="page-item @(i == ViewBag.PaginaActual ? "active" : "")">
              <a class="page-link" asp-action="Index" asp-route-pagina="@i">@i</a>
            </li>
          }

          @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
          {
            <li class="page-item">
              <a class="page-link" asp-action="Index" asp-route-pagina="@(ViewBag.PaginaActual + 1)">Siguiente</a>
            </li>
          }
          else
          {
            <li class="page-item disabled">
              <span class="page-link">Siguiente</span>
            </li>
          }
        </ul>
      </nav>
    </div>
    }
  </div>
</div>

@section Scripts {
  <script>
    // Activar tooltips de Bootstrap
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.forEach(function (tooltipTriggerEl) {
      new bootstrap.Tooltip(tooltipTriggerEl);
    });
  </script>
}
