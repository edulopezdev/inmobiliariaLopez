@model InmobiliariaLopez.Models.Inmueble

@{
  ViewData["Title"] = "Eliminar Inmueble";
}

<h1 class="mb-4 text-center" style="font-family: 'Roboto', sans-serif; font-size: 2rem; color: #343a40;">
  Eliminar Inmueble
</h1>

<div class="card shadow-lg border-0 rounded-4">
  <div class="card-header bg-gradient text-dark border-0 rounded-4">
    <h5 class="mb-0" style="font-family: 'Roboto', sans-serif; font-size: 1.25rem;">
      Confirmación de eliminación
    </h5>
  </div>
  <div class="card-body" style="padding: 1.5rem;">
    <h4>Detalles del Inmueble</h4>
    <hr />
    <dl class="row">
      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.IdInmueble)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.IdInmueble)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Direccion)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Direccion)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Uso)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Uso)</dd>

      <dt class="col-sm-2">Tipo de Inmueble</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.TipoNombre)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Ambientes)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Ambientes)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Latitud)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Latitud)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Longitud)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Longitud)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Precio)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Precio)</dd>

      <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Estado)</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.Estado)</dd>

      <dt class="col-sm-2">Propietario</dt>
      <dd class="col-sm-10">@Html.DisplayFor(model => model.PropietarioCompleto)</dd>
    </dl>

    <h3 class="text-danger mt-4">¿Está seguro de que desea eliminar este Inmueble?</h3>
  </div>

  <div class="card-footer d-flex justify-content-end">
    <form id="deleteForm" method="post" asp-action="Delete">
      @Html.AntiForgeryToken()
      <input type="hidden" asp-for="IdInmueble" />
      <button type="button" id="btnEliminar" class="btn btn-danger btn-sm me-2">Eliminar</button>
    </form>
    <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">Volver al listado</a>
  </div>
</div>

@section Scripts {
  @await Html.PartialAsync("_ValidationScriptsPartial")

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      console.log("Script de eliminación cargado correctamente");

      const btnEliminar = document.getElementById("btnEliminar");
      const form = document.getElementById("deleteForm");

      btnEliminar.addEventListener("click", function (event) {
        event.preventDefault();
        console.log("Click detectado en Eliminar");

        Swal.fire({
          title: "¿Estás seguro?",
          text: "Esta acción no se puede deshacer.",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#dc3545",
          cancelButtonColor: "#6c757d",
          confirmButtonText: "Sí, eliminar",
          cancelButtonText: "Cancelar"
        }).then((result) => {
          if (result.isConfirmed) {
            console.log("Confirmado. Enviando formulario...");
            form.submit();
          } else {
            console.log("Cancelado por el usuario.");
          }
        });
      });
    });
  </script>
}
